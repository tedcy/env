[ -z "$PS1" ] && return

# force ignoredups and ignorespace
export HISTCONTROL=ignoreboth
# append to the history file, don't overwrite it
shopt -s histappend

alias ls='ls -F --show-control-chars --color=auto'
eval `dircolors -b ~/.dir_colors`
export PS1='\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
alias gg='g++ -std=c++17 -o out.exe -g -pthread -O2'
alias ggd='g++ -std=c++17 -o out.exe -g -pthread -D LOG_TAG'
alias ggm='g++ -std=c++17 -o out.exe -g -Wl,--no-as-need -ldl -pthread -O2 -D MEM_TAG'
alias ggmg='_f(){ \
g++ -std=c++17 -o out.exe -g -Wl,--no-as-need -ltcmalloc -lprofiler -lunwind -pthread -D GPERF_TAG $1 && \
echo "1.RUN HEAPCHECK=local ./out.exe or HEAPCHECK=draconian ./out.exe" && echo "2.RUN ggmgp $outputFile"
}; _f'
alias ggmgp='_f(){ \
google-pprof ./out.exe $1 --inuse_objects --lines --heapcheck \
--edgefraction=1e-10 --nodefraction=1e-10 --collapsed > /tmp/out.data && \
/root/FlameGraph/flamegraph.pl /tmp/out.data > /tmp/out.svg && \
echo "output /tmp/out.svg"
}; _f'
alias ggcg='_f(){ 
g++ -std=c++17 -o out.exe -g -Wl,--no-as-need -ltcmalloc -lprofiler -lunwind -pthread -D GPERF_TAG $1 && \
echo "1.RUN ./out.exe" && echo "2.RUN ggcgpl: check lines or ggcgpf: check funcs"
}; _f'
alias ggcgpl='_f(){ \
google-pprof ./out.exe /tmp/CpuHolder.prof --lines \
--edgefraction=1e-10 --nodefraction=1e-10 --text && \
google-pprof ./out.exe /tmp/CpuHolder.prof --lines \
--edgefraction=1e-10 --nodefraction=1e-10 --collapsed > /tmp/out.data && \
/root/FlameGraph/flamegraph.pl /tmp/out.data > /tmp/out.svg && \
echo "output /tmp/out.svg"
}; _f'
alias ggcgpf='_f(){ \
google-pprof ./out.exe /tmp/CpuHolder.prof --func \
--edgefraction=1e-10 --nodefraction=1e-10 --text && \
google-pprof ./out.exe /tmp/CpuHolder.prof --func \
--edgefraction=1e-10 --nodefraction=1e-10 --collapsed > /tmp/out.data && \
/root/FlameGraph/flamegraph.pl /tmp/out.data > /tmp/out.svg && \
echo "output /tmp/out.svg"
}; _f'

alias bear='_f(){ \
bear $* && cp compile_commands.json compile_commands.json_bk && \
compdb -p . list > /tmp/compile_commands.json && cp /tmp/compile_commands.json .
}; _f'
alias refreshHeader='_f() { \
cp compile_commands.json compile_commands.json_bk && \
compdb -p . list > /tmp/compile_commands.json && cp /tmp/compile_commands.json .
}; _f'

alias ll='ls -l'

# git
alias gpush='git add -u && git commit -m '1' && git pull -r && git push'
alias gstatus='git status -uno'
alias ghelp='echo "查询两个分支的共同祖先commit: 
git merge-base branch1 branch2
合并多个commit到一个: 
git rebase -i commit-id
然后选择commit前pick为合并 https://cloud.tencent.com/developer/article/1491814
"'

export LESSCHARSET=utf-8
export LC_ALL="en_US.UTF-8"
export LANG="en_US.UTF-8"
